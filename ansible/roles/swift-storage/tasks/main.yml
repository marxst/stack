---
- name: install swift storage components
  apt:
    name: '{{ item }}'
    state: present
  with_items:
    - rsync
    - swift
    - swift-account
    - swift-container
    - swift-object

- name: create swift config directory
  file:
    state: directory
    path: /etc/swift
    owner: root
    group: swift
    mode: 0755

- name: create rsyncd config
  template:
    src: rsyncd.conf.j2
    dest: /etc/rsyncd.conf
    owner: root
    group: root
    mode: 0644

- name: ensure swift-root directory permissions
  file:
    path: '{{ swift_root }}'
    state: directory
    owner: swift
    group: swift
    recurse: yes

- name: create swift cache dir
  file:
    path: /var/cache/swift
    state: directory
    owner: root
    group: swift
    recurse: yes
    
- name: enable rsyncd
  lineinfile:
    dest: /etc/default/rsync
    regexp: ^#*\s*RSYNC_ENABLE=.*$
    line: RSYNC_ENABLE=true
  notify: restart rsync

- name: swift account-server base configuration
  ini_file:
    dest: /etc/swift/account-server.conf
    owner: root
    group: root
    mode: 0644
    section: '{{ item.section }}'
    option: '{{ item.option|default(omit) }}'
    value: '{{ item.value|default(omit) }}'
  no_log: true
  with_items:
    - '{{ swift_account_config_base + swift_account_config|default([]) }}'
  notify:
    - restart swift-account
    - restart swift-account-auditor
    - restart swift-account-reaper
    - restart swift-account-replicator

- name: swift container-server base configuration
  ini_file:
    dest: /etc/swift/container-server.conf
    owner: root
    group: root
    mode: 0644
    section: '{{ item.section }}'
    option: '{{ item.option|default(omit) }}'
    value: '{{ item.value|default(omit) }}'
  no_log: true
  with_items:
    - '{{ swift_container_config_base + swift_container_config|default([]) }}'
  notify:
    - restart swift-container
    - restart swift-container-auditor
    - restart swift-container-replicator
    - restart swift-container-sync
    - restart swift-container-updater

- name: swift object-server base configuration
  ini_file:
    dest: /etc/swift/object-server.conf
    owner: root
    group: root
    mode: 0644
    section: '{{ item.section }}'
    option: '{{ item.option|default(omit) }}'
    value: '{{ item.value|default(omit) }}'
  no_log: true
  with_items:
    - '{{ swift_object_config_base + swift_object_config|default([]) }}'
  notify:
    - restart swift-object
    - restart swift-object-auditor
    - restart swift-object-replicator
    - restart swift-object-updater

# initialize builders, rings and swift.conf on ONE node
- block:
  - name: set the ring builder node
    set_fact:
      ring_builder: '{{ inventory_hostname }}'

  - include: create-rings.yml

  - name: swift configuration
    ini_file:
      dest: /etc/swift/swift.conf
      owner: root
      group: swift
      mode: 0640
      section: '{{ item.section }}'
      option: '{{ item.option|default(omit) }}'
      value: '{{ item.value|default(omit) }}'
    no_log: true
    with_items:
      - '{{ swift_config_base + swift_config|default([]) }}'

  run_once: true

- name: retrieve rings/builders/swift.conf from the ring_builder node
  slurp:
    src: /etc/swift/{{ item }}
  delegate_to: '{{ ring_builder  }}' 
  register: rings
  with_items:
    - '{{ swift_files }}'

- name: store ring/builder/swift.conf files
  copy:
    content: '{{ item.content }}'
    dest: /etc/swift/{{ item.source | basename }}.b64
    owner: root
    group: swift
    mode: 0644
  no_log: true
  with_items:
    - "{{ rings.results }}"
  notify: decode swift files

- meta: flush_handlers

# TODO: refactoring necessary
- name: enable / start rsync service
  service:
    name: rsync
    enabled: '{{ rsync_enabled | default("yes") }}'
    state: '{{ rsync_state | default("started") }}'

- name: enable / start swift-account service
  service:
    name: swift-account
    enabled: '{{ swift_account_enabled | default("yes") }}'
    state: '{{ swift_account_state | default("started") }}'

- name: enable / start swift-account-auditor service
  service:
    name: swift-account-auditor
    enabled: '{{ swift_account_auditor_enabled | default("yes") }}'
    state: '{{ swift_account_auditor_state | default("started") }}'

- name: enable / start swift-account-reaper service
  service:
    name: swift-account-reaper
    enabled: '{{ swift_account_reaper_enabled | default("yes") }}'
    state: '{{ swift_account_reaper_state | default("started") }}'

- name: enable / start swift-account-replicator service
  service:
    name: swift-account-replicator
    enabled: '{{ swift_account_replicator_enabled | default("yes") }}'
    state: '{{ swift_account_replicator_state | default("started") }}'

- name: enable / start swift-container service
  service:
    name: swift-container
    enabled: '{{ swift_container_enabled | default("yes") }}'
    state: '{{ swift_container_state | default("started") }}'

- name: enable / start swift-container-updater service
  service:
    name: swift-container-updater
    enabled: '{{ swift_container_updater_enabled | default("yes") }}'
    state: '{{ swift_container_updater_state | default("started") }}'

- name: enable / start swift-container-auditor service
  service:
    name: swift-container-auditor
    enabled: '{{ swift_container_auditor_enabled | default("yes") }}'
    state: '{{ swift_container_auditor_state | default("started") }}'

- name: enable / start swift-container-replicator service
  service:
    name: swift-container-replicator
    enabled: '{{ swift_container_replicator_enabled | default("yes") }}'
    state: '{{ swift_container_replicator_state | default("started") }}'

- name: enable / start swift-container-sync service
  service:
    name: swift-container-sync
    enabled: '{{ swift_container_sync_enabled | default("yes") }}'
    state: '{{ swift_container_sync_state | default("started") }}'

- name: enable / start swift-object service
  service:
    name: swift-object
    enabled: '{{ swift_object_enabled | default("yes") }}'
    state: '{{ swift_object_state | default("started") }}'

- name: enable / start swift-object-auditor service
  service:
    name: swift-object-auditor
    enabled: '{{ swift_object_auditor_enabled | default("yes") }}'
    state: '{{ swift_object_auditor_state | default("started") }}'

- name: enable / start swift-object-replicator service
  service:
    name: swift-object-replicator
    enabled: '{{ swift_object_replicator_enabled | default("yes") }}'
    state: '{{ swift_object_replicator_state | default("started") }}'

- name: enable / start swift-object-updater service
  service:
    name: swift-object-updater
    enabled: '{{ swift_object_updater_enabled | default("yes") }}'
    state: '{{ swift_object_updater_state | default("started") }}'
